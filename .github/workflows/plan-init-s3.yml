# name: 'S3 bucket'

# on:
#   pull_request:
#   push:
#     branches:
#       - master
#     tags-ignore: 
#       - '*'
#     paths:
#       - 'aws/global/s3/'
#   workflow_dispatch:
# jobs:
#   tf_fmt:
#     name: Deploy Site
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout Repo
#       uses: actions/checkout@v1

#     - name: Terraform Init
#       uses: hashicorp/terraform-github-actions/init@v0.4.0
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         TF_ACTION_WORKING_DIR: 'aws/global/s3/'
#         AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#     - name: Terraform Validate
#       uses: hashicorp/terraform-github-actions/validate@v0.3.7

#     - name: Terraform Plan
#       uses: hashicorp/terraform-github-actions/plan@v0.4.0
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         TF_ACTION_WORKING_DIR: 'aws/global/s3/'
#         AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

#     # - name: Sync S3
#     #   uses: jakejarvis/s3-sync-action@master
#     #   env:
#     #     SOURCE_DIR: 'devops-exersice-staniz-s3/global/s3/'
#     #     AWS_REGION: 'eu-north-1'
#     #     AWS_S3_BUCKET: 'devops-exersice-staniz-s3'
#     #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#     #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
name: Terraform AWS S3 bucket

on:
  workflow_dispatch:
    # Inputs the workflow expects.
    inputs:
      tfpath:
        description: 'aws/global/s3/'
        required: false
        default: 'aws/global/s3/'


jobs:
  
  tf_code_check:
    name: Terraform Validation and Build
    runs-on: ubuntu-latest

    if:  ${{ inputs.tfpath }} 
    steps:
    - uses: actions/checkout@v2.5.0


    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform init, plan 
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        echo "** Running Terraform Init**"
        terraform init

        echo "** Running Terraform Validate**"
        terraform validate


      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Terraform apply 
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
       
        echo "** Running Terraform Apply**"
        terraform apply -auto-approve

      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Terraform add backend
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        git config user.name "$GITHUB_ACTOR"
        echo ' terraform {' >> main.tf
        echo '   backend "s3" {' >> main.tf
        echo '    bucket         = "devops-exersice-staniz-s3"' >> main.tf
        echo '    key            = "devops-exersice-staniz-s3/global/s3/terraform.tfstate"' >> main.tf
        echo '    region         = "eu-north-1"' >> main.tf
        echo '    encrypt        = true' >> main.tf
        echo '  }' >> main.tf
        echo ' }' >> main.tf
        git add .
        git commit -m "Update s3 bucket tf.state to aws"
        git push origin master 

      working-directory: ${{ github.event.inputs.tfpath }}

    - name: Terraform init migrate-state
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        echo "** Running Terraform Migrate**"
        terraform init -migrate-state

#     - name: Terraform Destroy
#       run: |
#         echo "** Running Terraform Destroy**"
#         terraform plan -destroy
# #        terraform destroy -auto-approve
#       working-directory: ${{ github.event.inputs.tfpath }}



      