name: Terraform AWS S3 bucket

on:
  workflow_dispatch:
    # Inputs the workflow expects.
    inputs:
      tfpath:
        description: 'aws/global/s3/'
        required: false
        default: 'aws/global/s3/'


jobs:
  
  tf_code_check:
    name: Terraform Validation and Build
    runs-on: ubuntu-latest

    if:  ${{ inputs.tfpath }} 
    steps:
    - uses: actions/checkout@v2.5.0


    - name: Configure AWS Credentials Action For GitHub Actions
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    # - name: Terraform init, plan 
    #   run: |
    #     echo `pwd`
    #     echo "tfpath ${{ github.event.inputs.tfpath }}"
    #     echo "** Running Terraform Init**"
    #     terraform init

    #     echo "** Running Terraform Validate**"
    #     terraform validate


    #   working-directory: ${{ github.event.inputs.tfpath }}

    # - name: Terraform apply 
    #   run: |
    #     echo `pwd`
    #     echo "tfpath ${{ github.event.inputs.tfpath }}"
       
    #     echo "** Running Terraform Apply**"
    #     terraform apply -auto-approve

    #   working-directory: ${{ github.event.inputs.tfpath }}

    # - name: Terraform add backend
    #   run: |
    #     echo `pwd`
    #     echo "tfpath ${{ github.event.inputs.tfpath }}"
    #     git config user.name "$GITHUB_ACTOR"
    #     echo ' terraform {' >> main.tf
    #     echo '   backend "s3" {' >> main.tf
    #     echo '    bucket         = "devops-exersice-staniz-s3"' >> main.tf
    #     echo '    key            = "devops-exersice-staniz-s3/global/s3/terraform.tfstate"' >> main.tf
    #     echo '    region         = "eu-north-1"' >> main.tf
    #     echo '    encrypt        = true' >> main.tf
    #     echo '  }' >> main.tf
    #     echo ' }' >> main.tf
    #     git add .
    #     git commit -m "Update s3 bucket tf.state to aws"
    #     git push origin master 

    #   working-directory: ${{ github.event.inputs.tfpath }}

    # - name: Terraform init migrate-state
    #   run: |
    #     echo `pwd`
    #     echo "tfpath ${{ github.event.inputs.tfpath }}"
    #     echo "** Running Terraform Migrate**"
    #     terraform init -migrate-state

    #   working-directory: ${{ github.event.inputs.tfpath }}  

    - name: Terraform Destroy
      run: |
        echo `pwd`
        echo "tfpath ${{ github.event.inputs.tfpath }}"
        sed -i '/terraform { backend /,/}/d' main.tf
        git add .
        git commit -m "Delete s3 bucket tf.state from aws"
        git push origin master
        echo "** Running Terraform Destroy**"
        terraform plan -destroy
        terraform destroy -auto-approve
      working-directory: ${{ github.event.inputs.tfpath }}



      